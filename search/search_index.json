{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"THOTH DOCUMENTATION PORTAL","text":"<p>THOTH is a web app based developed as part of the TEXTaiLES toolbox as a dedicated 3D viewer and annotator.</p> <p>THOTH is based on the ATON Framework, a 3D viewer designed for uses in cultural heritage. Both THOTH and ATON are in turn built on Node.js using Three.js.</p> <p> </p> <p> </p>"},{"location":"api/events/","title":"Events","text":"<p>Local events are activated using the built-in method <code>THOTH.fire()</code>. This method is identical to <code>ATON.fire()</code>, provided by ATON.EventHub. Events in THOTH are built around this method.</p> <p>Syntax:</p> <pre><code>THOTH.fire(\"eventName\", args, onSuccess);\n</code></pre> <p>Photon/VRC events are activated using the built-in method <code>THOTH.firePhoton()</code>. This method is identical to <code>ATON.Photon.fire()</code>, provided by ATON.Photon. Events in THOTH are built around this method.</p> <p>Syntax:</p> <pre><code>THOTH.firePhoton(\"eventName\", args, onSuccess);\n</code></pre>"},{"location":"api/events/#ui","title":"UI","text":"<p>Events called from the front end.</p> Event Description Arguments <code>createLayer</code> Resolves layer id and calls <code>createLayerScene</code> locally and in Photon <code>-</code> <code>deleteLayer</code> Calls <code>deleteLayerScene</code> locally and in Photon <code>layer_id</code> <code>ediMetadata</code> Calls <code>editLayerScene</code> locally and in Photon <code>layer_id</code>, <code>layer_metadata</code> <code>selectBrush</code> Selects the brush tool <code>-</code> <code>selectEraser</code> Selects the eraser tool <code>-</code> <code>selectLasso</code> Selects the lasso tool <code>-</code> <code>selectNone</code> Deselects all tools <code>-</code>"},{"location":"api/events/#scene","title":"Scene","text":"<p>These are events that modify the scene object Scene.currData. Usually called both locally and globally.</p> Event Description Arguments <code>createLayerScene</code> Creates a new layer in scene and its respective UI element <code>layer_id</code> <code>deleteLayerScene</code> Deletes a layer from the scene and its respective UI element <code>layer_id</code> <code>editLayerScene</code> Edits a layer attribute <code>layer_id</code>,<code>attribute</code>,<code>value</code> <code>addToSelectionScene</code> Adds faces to a layer selection <code>layer_id</code>,<code>new_faces</code> <code>delFromSelectionScene</code> Removes faces from a layer selection <code>layer_id</code>,<code>new_faces</code>"},{"location":"api/events/#tools","title":"Tools","text":"<p>Events called from the toolbox.</p> Event Description Arguments <code>useBrush</code> Called to select faces with the brush tool <code>-</code> <code>endBrush</code> Called when brush selection ends to add selected faces to the active layer <code>-</code> <code>useEraser</code> Called to select faces with the eraser tool <code>-</code> <code>endEraser</code> Called when eraser selection ends to remove selected faces from the active layer <code>-</code> <code>startLasso</code> Called to start lasso tool <code>-</code> <code>updateLasso</code> Called to update the lasso during selection <code>-</code> <code>endLassoAdd</code> Called when lasso selection ends to add selected faces to the active layer <code>-</code> <code>endLassoDel</code> Called when lasso selection ends to remove selected faces from the active layer <code>-</code>"},{"location":"api/events/#photon","title":"Photon","text":"<p>Events called to emit to multiple users through Photon.</p> Event Description Arguments <code>suncScene</code> Emits scene state to other users <code>layers</code>"},{"location":"api/rest/","title":"REST API","text":"<p>Within the context of ECCCH, THOTH scenes are manages using the ATON Rest API v2. This allows ATON to integrate with external platforms, services and tools.</p> <p>ATON REST API v2 Documentation</p>"},{"location":"deployment/installation_advanced/","title":"Advanced Installation","text":""},{"location":"deployment/installation_advanced/#advanced-installation","title":"Advanced Installation","text":"<p>In order to install ATON and THOTH using this method, you must first follow the steps shown in the Basic Installation section first.</p> <p> </p> <p>To install PM2 (on any OS) you should just type on command-line:</p> <pre><code>npm install pm2 -g\n</code></pre> <p>On debian-based systems (Linux OS servers) you should use sudo before the command, in order to install PM2 globally.</p> <p>Now, you can simply run and deploy all ATON services by typing (from main folder):</p> <pre><code>pm2 start\n</code></pre> <p>Finally, if you want to stop all services, you can type:</p> <pre><code>pm2 stop all\n</code></pre>"},{"location":"deployment/installation_basic/","title":"Basic Installation","text":""},{"location":"deployment/installation_basic/#basic-installation","title":"Basic Installation","text":""},{"location":"deployment/installation_basic/#step-1","title":"Step 1","text":"<p>The only pre-requisite to run your own instance of ATON on your machine is Node.js. You can install it on Windows, Linux, and Mac OS.</p> <p> </p>"},{"location":"deployment/installation_basic/#step-2","title":"Step 2","text":"<p>Download a copy of ATON framework from GitHub or grab the zip package. If you are not so familiar with git, dont worry: just grab the zip and extract somewhere on your machine. In general however, the best solution is to git clone the repository: this allows you to periodically update your instance without messing with your custom configuration.</p> <p>To clone the repository using the terminal run:</p> <pre><code>git clone https://github.com/phoenixbf/aton.git\n</code></pre> <p> </p>"},{"location":"deployment/installation_basic/#step-3","title":"Step 3","text":"<p>Download a copy of THOTH from Github and place it in the /wapps folder located directly inside the aton folder. Similarly to ATON, either download the zip or clone the repository inside the wapps folder. </p> <pre><code>git clone https://github.com/Xenobii/thoth_v2.git\n</code></pre> <p> </p>"},{"location":"deployment/installation_basic/#step-4","title":"Step 4","text":"<p>Launch setup.bat (Windows) or execute setup.sh (Linux and Mac OS) from the ATON main folder. Alternatively, open your terminal, go to the main ATON folder (<code>cd /your/ATON/folder/</code>) and just type this command:</p> <pre><code>npm install\n</code></pre> <p>This installs and updates all node.js modules required by ATON.</p>"},{"location":"deployment/installation_basic/#step-5","title":"Step 5","text":"<p>Once you have installed all the above prerequisites, you can launch the main ATON service by launching quickstart.bat (Windows) or quickstart.sh (Linux or Mac OS). Alternatively, you can run the following command from your terminal:</p> <pre><code>npm start\n</code></pre> <p>This will run and deploy a basic instance of ATON on your machine.</p> <p>To verify everything runs properly, navigate to http://localhost:8080/ on your web browser. </p>"},{"location":"deployment/open_scene/","title":"Opening a scene with THOTH","text":"<p>To open a scene using the THOTH web app, open the following url on your web browser.</p> <pre><code>{base_url}/a/thoth_v2/?s={scene_url}\n</code></pre> <p>where <code>base_url</code> is the base thoth uri and <code>scene_url</code> the uri of the scene. The default <code>base url</code> is http://localhost:8080.</p> <p>You can create a scene from the ATON front end (shu) or through a post request through the ATON REST API.</p>"},{"location":"manual/collab/","title":"Collaborative usage","text":"<p>THOTH allows for collaborative sessions, where multiple users can cooperate on the same scene.</p>"},{"location":"manual/export/","title":"Exporting changes","text":"<p>A user can save the changes applied to a scene by selecting the export button on the top toolbar. This will save the changes to the scene json located within the appropriate directory. </p> <p>The scene json can afterwards be fetched using the ATON REST API</p>"},{"location":"manual/history/","title":"History","text":"<p>By using the Undo/Redo commands and the History panel, you can move to previous/next states in your scene.</p> <ul> <li> <p>Undo: Moves one step back in the undo queue. Press the undo button or use the keyboard shortcut Control + Z. </p> </li> <li> <p>Redo: Moves one step forward. Press the redo button or use the keyboard shortcut Control + Y.</p> </li> </ul> <p>It's worth noting that history is stored seperately for each user in a collaborative scene. Undo/Redo commands from each user will affect only their actions and not those of other users.</p>"},{"location":"manual/keybinds/","title":"KEYBINDS","text":"<p>This section lists all the keyboard shortcuts provided by THOTH.</p>"},{"location":"manual/keybinds/#tools","title":"Tools","text":"Key Event B Select Brush E Select Eraser L Select Lasso [ Decrease tool size ] Increase tool size"},{"location":"manual/keybinds/#history","title":"History","text":"Key Event Ctrl+Z Undo Ctrl+Y Redo"},{"location":"manual/layers/","title":"Layers","text":""},{"location":"manual/layers/#layer-overview","title":"Layer Overview","text":"<p>Each layer can be thought of as a different annotation object, in other words a structured descriptor for a specific selection. Visually, it is represented by the selected faces on the object. As an entity, it can be described by its name and metadata.</p> <p>THOTH layers are objects which contain the following attributes:</p> Attribute Description <code>id</code> : The uinque id assigned to the layer. <code>name</code> The name of the layer. <code>metadata</code> The metadata associated with the selection. <code>selection</code> The set of faces to which the metadata is assigned to. <code>color</code> The color the layer selection will be displayed as. <code>visible</code> Defines whether a layer is visible or hidden. <p>The user can create new layers, as well as modify and delete existing layers. This can be achieved from the layer panel accessed from the Layers button.</p>"},{"location":"manual/layers/#creating-a-new-layer","title":"Creating a new layer","text":"<p>From the layer panel, a new layer can be created by pressing the Create New Layer button.</p> <p></p> <p>This will automatically assign an id to the new layer as well as a default name and color. </p> <p>The user can select the created layer by pressing its name on the layer panel.</p>"},{"location":"manual/layers/#modifying-a-layer","title":"Modifying a layer","text":"<p>For a selected layer, the user can directly alter any of its attributes with the appropriate tools and ui elements.</p> <ul> <li> <p>Name: The name of the layer can edited by double clicking the layer name in the layer panel.</p> </li> <li> <p>Metadata: The metadata can be edited by pressing the Edit Metadata button. This will show the respective modal, where the user can input values for any of the layer's properties, based on the TEXTaiLES schema.</p> </li> <li> <p>Selection: After selecting a layer, use the tools provided to mark an area on the object. The selection will automatically be assigned to the selected layer.</p> </li> <li> <p>Visibility: You can toggle the visibility of a layer by pressing the visibility icon.</p> </li> </ul>"},{"location":"manual/layers/#deleting-layers","title":"Deleting layers","text":"<p>The user can delete a layer by pressing the Delete button on that layer's controller. This will prompt the user before confirming the deletion of the layer. </p>"},{"location":"manual/tools/","title":"Tools","text":""},{"location":"manual/tools/#select-a-tool","title":"Select a tool","text":"<p>To select a tool, do one of the following: </p> <ul> <li> <p>Click a tool in the Tool panel.</p> </li> <li> <p>Press the tools's keyboard shortcut. The keyboard shortcut is displayed in its tool tip. More information on tooltips can be found under the keybinds section.</p> </li> </ul> <p>Each tool also has additional adjustable options that can alter its usage, such as size and normal thresholds.</p>"},{"location":"manual/tools/#additivesubtractive-mode","title":"Additive/Subtractive mode","text":"<p>Each tool has a default functionality to either add or remove faces from a selection (e.g, the brush adds faces to a selection). This functionallity is used when the tool is used with the left mouse button.</p> <p>When a tool is used with the right mouse button, any faces that would be added to the selection would instead be removed.</p>"},{"location":"manual/tools/#tools","title":"Tools","text":""},{"location":"manual/tools/#brush","title":"Brush","text":"<p>Allows the user to paint directly onto 3D surfaces within the scene by holding down. Press the brush button on the tools panel or use the keyboard shortcut B.</p> <p>Options</p> <ul> <li>Size: Adjusts the size of the selection.</li> </ul>"},{"location":"manual/tools/#eraser","title":"Eraser","text":"<p>Allows the user to erase directly from 3D surfaces within the scene. Press the eraser button on the tools panel or use the keyboard shortcut E.</p> <p>Options</p> <ul> <li>Size: Adjusts the size of the selection.</li> </ul>"},{"location":"manual/tools/#lasso","title":"Lasso","text":"<p>Allows the user to form a free-hand selection onto the screen, from which a selection will be formed on the object. Press the lasso button on the tools panel or use the keyboard shortcut L.</p> <p>Options</p> <ul> <li>Resolution: Adjust the level of detail of the lasso selection.</li> <li>Select occluded faces: Enables selection of obstructed faces</li> <li>Normal threshold: Adjusts the tolerance of the lasso tool. The higher the threshold the lower the tolerance.</li> </ul>"},{"location":"manual/ui/","title":"User Interface","text":""}]}